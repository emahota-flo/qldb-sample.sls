service: QLDB-sample

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    STAGE: ${opt:stage, self:provider.stage}
    QLDB_LEDGER_NAME: ${self:custom.ledgerNames.SampleLedger.${opt:stage, self:provider.stage}}
  region: ${file(env.yml):${opt:stage, self:provider.stage}.REGION}
  profile: ${file(env.yml):${opt:stage, self:provider.stage}.PROFILE}
  tags:
    client: ${file(env.yml):${opt:stage, self:provider.stage}.CLIENT}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - QLDB:*
      Resource: '*'

package:
  include:
    - bin/*

custom:
  ledgerNames:
    SampleLedger:
      local: 'sample-ledger-local'
      dev: 'sample-ledger-dev'
      test: 'sample-ledger-test'
      prod: 'sample-ledger'
  streamNames:
    QLDBStream:
      local: 'QLDBStream-local'
      dev: 'QLDBStream-dev'
      test: 'QLDBStream-test'
      prod: 'QLDBStream'
    QLDBKinesisStream:
      local: 'QLDBKinesisStream-local'
      dev: 'QLDBKinesisStream-dev'
      test: 'QLDBKinesisStream-test'
      prod: 'QLDBKinesisStream'
    QLDBStreamRole:
      local: 'KinesisStreamRole-local'
      dev: 'KinesisStreamRole-dev'
      test: 'KinesisStreamRole-test'
      prod: 'KinesisStreamRole'


  dirconfig:
    quiet: true
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules:
      packagePath: 'package.json'
      forceExclude:
        - aws-sdk
    packager: 'npm'

  prune:
    automatic: true
    number: 3
  envFiles:
    - env.yml

plugins: # order matters!
  - '@redtea/serverless-env-generator'
  - serverless-dir-config-plugin
  - serverless-webpack
  - serverless-offline
  - serverless-prune-plugin
